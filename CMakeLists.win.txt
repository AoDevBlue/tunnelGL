cmake_minimum_required(VERSION 2.6)
 
project(tunnelGL)
 
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -DGLEW_STATIC -g -DGL_GLEXT_PROTOTYPES -mwindows")

get_filename_component(lib_path "libraries/lib" ABSOLUTE)
LINK_DIRECTORIES(${lib_path})
INCLUDE_DIRECTORIES("include")
INCLUDE_DIRECTORIES("libraries/include")
INCLUDE_DIRECTORIES(".")
INCLUDE_DIRECTORIES("3rd-parties/irrKlang/include")
 
file(GLOB_RECURSE SOURCES "src/*.c*")
file(GLOB_RECURSE SRCUTILS "utils/*.c*")
add_executable(tunnelGL ${SOURCES} ${SRCUTILS})
target_link_libraries(tunnelGL mingw32 glew32s opengl32 glfw3dll libassimp.dll.a libzlibstatic.a glu32 irrKlang)

###  Copying resources (shaders, images,...)  ###{{{
macro(copy_files GLOBPAT DESTINATION)
  file(GLOB COPY_FILES
    RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}/resources
    ${GLOBPAT})
  foreach(FILENAME ${COPY_FILES})
    message("*** COPYING: " ${FILENAME})
    set(SRC "${CMAKE_CURRENT_SOURCE_DIR}/resources/${FILENAME}")
    set(DST "${DESTINATION}/${FILENAME}")
    configure_file(${SRC} ${DST} COPYONLY)
  endforeach(FILENAME)
endmacro(copy_files)

### Copying resources in the runtime directory (images, shaders,...)
copy_files("resources/*.tga" ${CMAKE_BINARY_DIR})
copy_files("resources/*.obj" ${CMAKE_BINARY_DIR})
copy_files("resources/*.glsl" ${CMAKE_BINARY_DIR})
copy_files("resources/*.txt" ${CMAKE_BINARY_DIR})
copy_files("resources/*.ogg" ${CMAKE_BINARY_DIR})
copy_files("resources/*.dds" ${CMAKE_BINARY_DIR})
###  Copying resources (shaders, images,...)  ###}}}